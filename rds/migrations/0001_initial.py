# Generated by Django 2.1 on 2019-07-12 14:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('articleindex', models.IntegerField(blank=True, db_column='articleIndex', null=True)),
                ('datecreated', models.DateTimeField(blank=True, db_column='dateCreated', null=True)),
                ('icon', models.IntegerField(blank=True, null=True)),
                ('lastupdateddate', models.DateTimeField(blank=True, db_column='lastUpdatedDate', null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('category_id', models.BigIntegerField(blank=True, null=True)),
                ('metadata_id', models.BigIntegerField(blank=True, null=True)),
                ('enabled', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Attachmentlog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('document_id', models.BigIntegerField(blank=True, null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'AttachmentLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('categoryindex', models.IntegerField(blank=True, db_column='categoryIndex', null=True)),
                ('categoryname', models.CharField(blank=True, db_column='categoryName', max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('acceptnewperson', models.TextField(blank=True, db_column='acceptNewPerson', null=True)),
            ],
            options={
                'db_table': 'Configuration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Documentmetadata',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('createtime', models.DateTimeField(blank=True, db_column='createTime', null=True)),
                ('filename', models.CharField(blank=True, db_column='fileName', max_length=255, null=True)),
                ('mimetype', models.CharField(blank=True, db_column='mimeType', max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'DocumentMetaData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('assignee', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('referenceid', models.BigIntegerField(blank=True, db_column='referenceId', null=True)),
                ('telp', models.CharField(blank=True, max_length=255, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('useremail', models.CharField(blank=True, db_column='userEmail', max_length=255, null=True)),
                ('personregistration_id', models.BigIntegerField(blank=True, db_column='personRegistration_id', null=True)),
                ('feedbackstatus', models.IntegerField(blank=True, db_column='feedbackStatus', null=True)),
            ],
            options={
                'db_table': 'Feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('accountexpired', models.TextField(blank=True, db_column='accountExpired', null=True)),
                ('enabled', models.TextField(blank=True, null=True)),
                ('locked', models.TextField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('passwordexpired', models.TextField(blank=True, db_column='passwordExpired', null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('userid', models.CharField(blank=True, db_column='userId', max_length=255, null=True)),
                ('usertype', models.IntegerField(blank=True, db_column='userType', null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('message', models.CharField(blank=True, max_length=512, null=True)),
                ('receiver', models.CharField(blank=True, max_length=255, null=True)),
                ('referenceid', models.BigIntegerField(blank=True, db_column='referenceId', null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('attacment_id', models.BigIntegerField(blank=True, null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('partyid', models.BigIntegerField(blank=True, db_column='partyId', null=True)),
            ],
            options={
                'db_table': 'Party',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('birthplace', models.CharField(blank=True, db_column='birthPlace', max_length=255, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('createdtime', models.DateTimeField(blank=True, db_column='createdTime', null=True)),
                ('disabilitytype', models.CharField(blank=True, db_column='disabilityType', max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=255, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('identification', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=255, null=True)),
                ('lastupdatetime', models.DateTimeField(blank=True, db_column='lastUpdateTime', null=True)),
                ('mariagestatus', models.IntegerField(blank=True, db_column='mariageStatus', null=True)),
                ('middlename', models.CharField(blank=True, db_column='middleName', max_length=255, null=True)),
                ('referenceid', models.BigIntegerField(blank=True, db_column='referenceId', null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('telp', models.CharField(blank=True, max_length=255, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='zipCode', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Personattachment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('attachement_id', models.BigIntegerField(blank=True, null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'PersonAttachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Personlog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('birthplace', models.CharField(blank=True, db_column='birthPlace', max_length=255, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('createdtime', models.DateTimeField(blank=True, db_column='createdTime', null=True)),
                ('disabilitytype', models.CharField(blank=True, db_column='disabilityType', max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=255, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('identification', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=255, null=True)),
                ('lastupdatetime', models.DateTimeField(blank=True, db_column='lastUpdateTime', null=True)),
                ('mariagestatus', models.IntegerField(blank=True, db_column='mariageStatus', null=True)),
                ('middlename', models.CharField(blank=True, db_column='middleName', max_length=255, null=True)),
                ('personid', models.BigIntegerField(blank=True, db_column='personId', null=True)),
                ('referenceid', models.BigIntegerField(blank=True, db_column='referenceId', null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255, null=True)),
                ('telp', models.CharField(blank=True, max_length=255, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='zipCode', max_length=255, null=True)),
            ],
            options={
                'db_table': 'PersonLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Personregistration',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
                ('registration_id', models.BigIntegerField(blank=True, null=True)),
                ('votereligible', models.TextField(blank=True, db_column='voterEligible', null=True)),
                ('votingstatus', models.IntegerField(blank=True, db_column='votingStatus', null=True)),
                ('votingtime', models.DateTimeField(blank=True, db_column='votingTime', null=True)),
                ('trackingnumber', models.CharField(blank=True, db_column='trackingNumber', max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('sscount', models.IntegerField(blank=True, db_column='ssCount', null=True)),
            ],
            options={
                'db_table': 'PersonRegistration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('approvalcode', models.CharField(blank=True, db_column='approvalCode', max_length=255, null=True)),
                ('approvalstatus', models.IntegerField(blank=True, db_column='approvalStatus', null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('signature', models.CharField(blank=True, max_length=255, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('userconfirmation', models.IntegerField(blank=True, db_column='userConfirmation', null=True)),
                ('username', models.CharField(blank=True, db_column='userName', max_length=255, null=True)),
                ('voterstatus', models.IntegerField(blank=True, db_column='voterStatus', null=True)),
                ('votingmethod', models.IntegerField(blank=True, db_column='votingMethod', null=True)),
                ('registrationstatus', models.IntegerField(blank=True, db_column='registrationStatus', null=True)),
            ],
            options={
                'db_table': 'Registration',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Registrationlog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
                ('registration_id', models.BigIntegerField(blank=True, null=True)),
                ('votingstatus', models.IntegerField(blank=True, db_column='votingStatus', null=True)),
                ('user', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'RegistrationLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tally',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('sequenceid', models.IntegerField(blank=True, db_column='sequenceId', null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('votingtype', models.IntegerField(blank=True, db_column='votingType', null=True)),
                ('party_id', models.BigIntegerField(blank=True, null=True)),
                ('postcount', models.IntegerField(blank=True, db_column='postCount', null=True)),
                ('tpscount', models.IntegerField(blank=True, db_column='tpsCount', null=True)),
            ],
            options={
                'db_table': 'Tally',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tpsvoting',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TPSVoting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tpsvotinglog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TPSVotingLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('destinationcity', models.CharField(blank=True, db_column='destinationCity', max_length=255, null=True)),
                ('destinationstate', models.CharField(blank=True, db_column='destinationState', max_length=255, null=True)),
                ('destinationtps', models.CharField(blank=True, db_column='destinationTPS', max_length=255, null=True)),
                ('person', models.TextField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Transfer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transferrequest',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('destinationcity', models.CharField(blank=True, db_column='destinationCity', max_length=255, null=True)),
                ('destinationstate', models.CharField(blank=True, db_column='destinationState', max_length=255, null=True)),
                ('destinationtps', models.CharField(blank=True, db_column='destinationTPS', max_length=255, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('person_id', models.BigIntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('destinationkecamatan', models.CharField(blank=True, db_column='destinationKecamatan', max_length=255, null=True)),
                ('destinationppln', models.CharField(blank=True, db_column='destinationPPLN', max_length=255, null=True)),
                ('destinationtpsln', models.CharField(blank=True, db_column='destinationTPSLN', max_length=255, null=True)),
                ('destinationkjri', models.CharField(blank=True, db_column='destinationKJRI', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TransferRequest',
                'managed': False,
            },
        ),
    ]
